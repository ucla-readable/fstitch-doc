* Paper

review_todos file

Improve system name?

Title:
- Write "We <heart> Kudos" in teeny tiny letters somewhere?

Related work:
- ext2?
	http://web.mit.edu/tytso/www/linux/ext2intro.html
	http://www.nongnu.org/ext2-doc/ext2.html
- recent stackable: https://ols2006.108.redhat.com/2007/Reprints/sipek-Reprint.pdf ?

Optimizations:
- Update overlap merge algorithm description

Patchgroups:
- Remove svn figure?
- Note that our journal + patches implementation is not optimally efficient
- Add macro imap benchmarks?
- Compare data journaling (unnecessarily strict) vs minimal opgroups
- Do svn+opgroups crash test?
- Figure out: how does MacOSX HFS+ journaling work?

Modules:
- Explore modules not possible within a stackable file system (osdi reviewer)

Implementation:
- Note that the current implementation stores two copies of each block

Eval:
- Describe what uses system time
- More fully explain allocator differences and the effects
- Note size of a patch? Note #deps and size?

Misc:
- Look at BSD implementation of soft updates; how does it work?
- Check that we did not forget any todos sent to kudos@
- Be consistent with "Section" and "\S", "in-flight" and "in flight", etc.
- Decide how to cite email threads (esp reference's title)

* Kudos

- Decrease cpu usage
- Ensure correct directory ordering (delete a; touch a)
- Import linux ext2 allocator?
- Enhance journaling mode to merge intra-txn patches?
- Add more consistency modules?
- Add patch undo?
	- On hold because it needs dependency count tracking?
	- But maybe do not write dirty but freed data blocks?
- patchgroups: what if an application doesn't care about mtime?
- Optimize renames (to make SU andrew faster and make patch opts work better?)
- Optimize journal patches
- Speed up revision_tail_* if it is still slow (iteration)

* Benchmarking

- Increase postmark test size
- Try benchmarks with larger cache
- Start running correctness tests?
- Add SU to Linux ext2?
- Add gzip benchmark
- Add svn benchmark
- Track other patch-related datastructure memory usage?
  - bit overlap hash maps
  - number of hard patches
- Increase number of runs from 3 to maybe 10
- Check that NOFUA==WB and FUA==WT
	- Benchmark ext3 with barriers?
