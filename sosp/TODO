* Paper

review_todos file

Improve system name?

Modules:
- Explore modules not possible within a stackable file system (osdi reviewer)

Opgroups:
- Improve imap evaluation re reviews?
  - Add macro benchmarks
- Compare data journaling (unnecessarily strict) vs minimal opgroups
- Do svn+opgroups crash test?
- Figure out: how does MacOSX HFS+ journaling work?

Implementation:
- Note that the current implementation stores two copies of each block

Related work:
- ext2?
	http://web.mit.edu/tytso/www/linux/ext2intro.html
	http://www.nongnu.org/ext2-doc/ext2.html
- recent stackable: https://ols2006.108.redhat.com/2007/Reprints/sipek-Reprint.pdf ?

Misc:
- Look at BSD implementation of soft updates; how does it work?
- Check that we did not forget any todos sent to kudos@ 
- Be consistent with "Section" and "\S", "in-flight" and "in flight", etc.
- Note that our journal + patches implementation is not optimally efficient

* Kudos

- Decrease cpu usage
- Ensure correct directory ordering (delete a; touch a)
- Import linux ext2 allocator?
- Eenhance journaling mode to merge intra-txn patches?
- Add more consistency modules?
- Add patch undo?
	- On hold because it needs dependency count tracking?
- patchgroups: what if an application doesn't care about mtime?

* Benchmarking

- Increase postmark test size
- Try benchmarks with larger cache
- Start running correctness tests?
- Add SU to Linux ext2?
- Add FUA to Linux ext2/ext3?
- Add gzip benchmark
- Add svn benchmark
- Track other patch-related datastructure memory usage?
  - bit overlap hash maps
  - number of hard patches

* Important bugs

- medium/large postmark crashes kudos journaling


* Unimportant bugs (unless they get in our way)

- UU cannot sync during shutdown
