- bench/sosp/time_run crashed kudos-pb after a few minutes (probably tar
with journaling):
[29827.351987] kfstitchd started (PID = 30795)
[29827.356215] fstitchd (dextrin) starting
[29827.360103] fstitchd basic initialization complete!
[29827.364997] fstitchd: default write back cache size = 40000
[29827.370587] Using device /dev/sdb
[29827.382917] Found 1 PC partitions.
[29827.386339] Partition 1 has type 83
[29827.391466]  Magic Number 0xef53 
[29827.394798]  Blocksize might be 4096
[29827.398384]  Number of inodes 1224000
[29827.402057]  Size of inode sturcture 128
[29827.405989]  Number of free inodes 1204016
[29827.410095]  Number of blocks 2443880
[29827.413768]  EXT2 Block size 4096
[29827.417095]  Number of free blocks 2324304
[29827.422567]  Size of block group is 32
[29827.426327]  Number of blocks per group 32768
[29827.430698]  Number of inodes per group 16320
[29827.436477] Assertion failure in loop_bd() at /home/frost/fstitch/modules/loo
p_bd.c:148: "bd->blocksize == info->lfs->blocksize"
[29827.448073]  [<c0117c29>] printk+0x17/0x1b
[29827.452194]  [<f8cca008>] assert_fail+0x8/0x58 [kfstitchd]
[29827.457721]  [<f8ce0ef0>] md_bd_read_block+0x0/0x69 [kfstitchd]
[29827.463679]  [<f8ccd130>] construct_lfs+0x93/0x1f1 [kfstitchd]
[29827.469543]  [<f8ced8ca>] ext2_lfs+0x0/0x19c [kfstitchd]
[29827.474896]  [<f8ccd435>] construct_uhfses+0x1a7/0x33e [kfstitchd]
[29827.481106]  [<f8cccef6>] fstitchd_init+0x13e/0x2e5 [kfstitchd]
[29827.487060]  [<f8ccd938>] fstitchd_main+0x86/0x2a2 [kfstitchd]
[29827.492918]  [<c02014e3>] __sysrq_put_key_op+0x8/0x16
[29827.497990]  [<f8ccdbda>] fstitchd_thread+0x86/0x128 [kfstitchd]
[29827.504037]  [<f8ccdb54>] fstitchd_thread+0x0/0x128 [kfstitchd]
[29827.509982]  [<c01037bb>] kernel_thread_helper+0x7/0x10

- uhfs_write() zeros out new blocks before adding the data.
When the data covers the entire block, how about we avoid the zeroing?
This might reduce cpu time.

- learn how BSD SU and Linux JBD are actually implemented

- prepare spectacular presentation
